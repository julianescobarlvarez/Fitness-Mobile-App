import { LinearGradient } from 'expo-linear-gradient'
import React, { useState, useEffect } from 'react'
import { Pressable, StyleSheet, Text, View, Alert, ScrollView, Image, FlatList } from 'react-native'
import { collection, doc, getDocs } from 'firebase/firestore'
import { dbFirebase } from '../../../../.expo/credentials'

export default function ExercisesListScreen(props) {
    const [list, setList] = useState([]);

    // Obtener los ejercicios desde Firestore
    useEffect(() => {
        const getExercises = async() => {
            try {
                const querysnapshot = await getDocs(collection(dbFirebase, 'exercises-strength'))
                const docs = []

                querysnapshot.forEach((doc)=>{
                    const {name, sets, reps, weight, exerciseImage, exerciseVideo} = doc.data()

                    docs.push({
                        id: doc.id,
                        name,
                        sets,
                        reps,
                        weight,
                        exerciseImage,
                        exerciseVideo
                    })
                })
                setList(docs)
            } catch (error) {
                console.log(error)
            }
        };
        getExercises();
    }, []);

    // FunciÃ³n para renderizar cada item de la lista
    const renderItem = ({ item }) => (
        <View style={styles.container}>
            <LinearGradient
                colors={['#A7C5EB', '#4A90E2']}
                style={styles.subcontainer2}
                start={{ x: 0.4, y: 0 }}
                end={{ x: 1, y: 0 }}
            >   
                {/* Mostrar la imagen del ejercicio */}
                {item.exerciseImage ? (
                    <Image source={{ uri: item.exerciseImage }} style={styles.image} resizeMode="contain"/>
                ) : (
                    <Text>No image available</Text>
                )}      
                <View style={{alignItems: 'baseline', flex: 1, padding: 15}}>
                    <Text style={{fontSize: 18, fontWeight: 'bold'}}>{item.name}</Text>
                    <Text style={{fontSize: 16}}>Sets: {item.sets[0]}-{item.sets[1]}</Text>
                    <Text style={{fontSize: 16}}>Reps: {item.reps[0]}-{item.reps[1]}</Text>
                    <Text style={{fontSize: 16}}>Weight: {item.weight[0]}-{item.weight[1]} kg</Text>
                </View>
                {/* Si deseas mostrar el video, lo puedes hacer con un componente adecuado */}
                {/* Ejemplo usando un componente de video si tienes la URL de ejercicio video */}
                {/* {item.exerciseVideo && <Video source={{ uri: item.exerciseVideo }} style={styles.video} />} */}
            </LinearGradient>
        </View>
    );

    return (
        <FlatList
            data={list}
            renderItem={renderItem}
            keyExtractor={(item) => item.id}
        />
    )
}

const styles = StyleSheet.create({
    container: {
        flex: 1, 
        backgroundColor: '#f5f5f5',
        marginHorizontal: 15
    },
    text: {
        color: '#f1f1f1',
        fontSize: 16,
        fontWeight: 'bold',
    },
    title: {
        color: 'white',
        fontSize: 20,
        fontWeight: 'bold',
        marginTop: 30,
        marginBottom: 15,
    },
    subcontainer2: {
        flexDirection: 'row',
        flexShrink: 1,
        justifyContent: 'space-between',
        alignItems: 'center',
        marginTop: 20,
        borderRadius: 10,
    },
    subcontainer3: {
        flexDirection: 'row',
        flexShrink: 1,
        alignItems: 'center',
        marginTop: 10,
        borderRadius: 10,
    },
    image: {
        width: 100,
        height: 100
    }
});